include "../../spec/arch/msp430/decls.i.vad"

#verbatim

include "../../spec/arch/msp430/decls.i.dfy"

module msp_reg_save {

import opened msp_machine
import opened msp_decls
import opened msp_vale
import opened mem
import opened stack
import opened bv16_op_s
import opened integers

#endverbatim

procedure save_r4__r10()
    requires
        in_stack_addr_range(sp);
        in_stack_addr_range(sp - 14);
    
    modifies
        mem; flat; sp;
    reads
        r4; r5; r6; r7; r8; r9; r10; 
    ensures
        mem == stack_push_batch(old(mem), old(flat),
            seq(r4, r5, r6, r7, r8, r9, r10));
        sp == old(sp) - 14;
        stack_depth(mem) == stack_depth(old(mem)) + 1;
{
    pushm_w(7, r10);
    assert pushm_w_seq(old(this.ms), GPR(10), 7)
        == seq(r4, r5, r6, r7, r8, r9, r10);
}

procedure save_r7__r10()
    requires
        in_stack_addr_range(sp - 8);
    
    modifies
        mem; flat; sp;
    reads
        frames; r10; r9; r8; r7;
    ensures
        mem == stack_push_batch(old(mem), old(flat),
            seq(r7, r8, r9, r10));
        mem == old(mem).(frames := frames);
        sp == old(sp) - 8;
        stack_depth(mem) == stack_depth(old(mem)) + 1;
{
    pushm_w(4, r10);
    assert pushm_w_seq(old(this.ms), GPR(10), 4) == seq(r7, r8, r9, r10);
}


procedure save_r12__r15()
    requires
        in_stack_addr_range(sp);
        in_stack_addr_range(sp - 8);
    
    modifies
        mem; flat; sp;
    reads
        r12; r13; r14; r15;
    ensures
        mem == stack_push_batch(old(mem), old(flat),
            seq(r12, r13, r14, r15));
        sp == old(sp) - 8;
        stack_depth(mem) == stack_depth(old(mem)) + 1;
{
    pushm_w(4, r15);
    assert pushm_w_seq(old(this.ms), GPR(15), 4)
        == seq(r12, r13, r14, r15);
}


#verbatim
}
#endverbatim
